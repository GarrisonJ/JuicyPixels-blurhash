name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc:
          - "8.6.5"
          - "8.8.3"
          - "8.10.1"
        include:
          - os: ubuntu-latest
            ghc: "latest"
            experimental: true
    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: latest
        enable-stack: false

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal update
        cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: Test
      run: |
        cabal test all --enable-tests
  stack:
    name: stack / resolver ${{ matrix.resolver }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        resolver:
          - "lts-14.27"
          - "lts-15.13"
        include:
          - os: ubuntu-latest
            resolver: nightly
            experimental: true
        


    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      with:
        stack-version: latest
        enable-stack: true
        stack-no-global: true
        stack-setup-ghc: false

    - name: Install resolver
      run: |
        stack --resolver ${{ matrix.resolver }} setup

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-stack

    - name: Build
      run: |
        stack --resolver ${{ matrix.resolver }} build --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack --resolver ${{ matrix.resolver }} test
